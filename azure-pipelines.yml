trigger:
- none

stages:
- stage: Plan
  jobs:
  - job: TerraformPlan
    steps:
    - checkout: self
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.9.8'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'TestingGroup'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$(ARM_CLIENT_ID)"
          echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$(ARM_CLIENT_SECRET)"
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(ARM_SUBSCRIPTION_ID)"
          echo "##vso[task.setvariable variable=ARM_TENANT_ID]$(ARM_TENANT_ID)"
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo 'location = "$(location)"' > $(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars
          echo 'admin_username = "$(admin_username)"' >> $(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars
          echo 'admin_password = "$(admin_password)"' >> $(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars
          echo 'docker_username = "$(docker_username)"' >> $(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars
          echo 'docker_password = "$(docker_password)"' >> $(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars


    - task: TerraformCLI@2
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/stacks/dev'
        environmentServiceName: 'TestingGroup'

    - task: TerraformCLI@2
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/stacks/dev'
        additionalArgs: '-out=tfplan -input=false -var-file=$(System.DefaultWorkingDirectory)/stacks/dev/dev.tvars'
        environmentServiceName: 'TestingGroup'

    - publish: '$(System.DefaultWorkingDirectory)/terraform/tfplan'
      artifact: tfplan
    - publish: '$(System.DefaultWorkingDirectory)/terraform/terraform.tfstate'
      artifact: tfstate